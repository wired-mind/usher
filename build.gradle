
buildscript {
    repositories {
        maven {
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
            url 'https://nexus.cyberphysicalsystems.io/content/groups/public' }
        }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.1.1'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply from: "gradle/maven.gradle"
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

repositories {
    maven {
        credentials {
            username sonatypeUsername
            password sonatypePassword
        }
        url 'https://nexus.cyberphysicalsystems.io/content/groups/public/' }
    mavenLocal()
}

dependencies {
    compile "io.vertx:vertx-core:$vertxVersion"
    compile 'com.typesafe:config:1.3.0'

    compile 'javax.el:el-api:2.2.1-b04'
    compile 'de.odysseus.juel:juel-impl:2.2.7'
    compile 'de.odysseus.juel:juel-spi:2.2.7'





    compile "io.vertx:vertx-dropwizard-metrics:$vertxVersion"
    compile "org.coursera:metrics-datadog:1.0.2"
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.kafka:kafka_2.11:0.8.2.1'
    compile 'org.apache.avro:avro:1.7.7'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.5.4'
    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile 'org.apache.kafka:kafka_2.11:0.8.2.1:test'
    testCompile 'org.apache.curator:curator-test:2.8.0'
    testCompile "com.cyberphysical:vertx-kafka-producer-all:1.0.0"
}

// Begin gradle avro plugin: https://github.com/commercehub-oss/gradle-avro-plugin
apply plugin: 'com.commercehub.gradle.plugin.avro-base'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.3.4'
    }
}

avro {
    stringType = "string"
    encoding = "UTF-8"
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/test/resources/avro")
    outputDir = file("src/test/generated-sources")
}

compileTestJava.source(generateAvro.outputs)

sourceSets {
    test {
        java {
            srcDir generateAvro.outputDir
        }
    }
}
// End gradle avro plugin

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Starter'
        attributes 'Main-Verticle': 'java:io.cozmic.usher.Start'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}


group = modowner
archivesBaseName = modname

/*
If you're uploading stuff to Maven, Gradle needs to generate a POM.
Please edit the details below.
 */
def configurePom(def pom) {
    pom.project {
        name rootProject.name
        description 'Description of your module here'
        inceptionYear '2013'
        packaging 'jar'

        url 'Your project url'

        developers {
            developer {
                id 'developer id (e.g. github username)'
                name 'developer name'
                email 'developer email'
            }
        }

        scm {
            url 'url to your repo - e.g. github repo url'
        }

        licenses {
            license {
                name 'The name of the license used, e.g.: The Apache Software License, Version 2.0'
                url 'URl to the license, e.g.: http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        properties {
            setProperty('project.build.sourceEncoding', 'UTF8')
        }
    }
}